{"version":3,"file":"component---src-pages-index-js-5dd199781f5e3a498510.js","mappings":"sJA8EA,UAhEkB,SAAAA,GAChB,IAAQC,EAASD,EAATC,KAEFC,EAAQD,MAAAA,OAAH,EAAGA,EAAME,OAAOC,MAE3B,OACE,gCACE,gBAAC,KAAD,CAAKC,MAAM,SACX,gBAAC,KAAD,CAAcA,MAAM,iBACpB,gBAAC,KAAD,MAEA,gBAAC,KAAD,KACGH,EAAMI,KAAI,YAAoC,IAAD,IAAhCC,KAAQC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,YACxB,OAAO,gBAAC,KAAD,CAAUC,IAAKF,EAAIC,YAAaA,QAI3C,gBAAC,KAAD,CACEE,aAAa,EACbC,YAAY,EAEZC,SAAU,EACVC,YAAa,EACbC,aAAa","sources":["webpack://typed-tech-blog/./src/pages/index.js"],"sourcesContent":["import * as React from 'react'\nimport {\n  AllPostTitle,\n  Divider,\n  Pagination,\n  PostFeed,\n  PostFeedWrapper,\n  SEO,\n} from '../components'\nimport { graphql } from 'gatsby'\n\n// TODO: allPost.js를 그대로 베껴야 한다!!\n/* numPages 즉, 총 몇 페이지인지는 개발하면서 수작업으로 확인해줘야 한다. */\n/* allPost의 numPages를 출력해보고 확인하면 됨 */\nconst IndexPage = props => {\n  const { data } = props\n\n  const posts = data?.allMdx.edges\n\n  return (\n    <>\n      <SEO title='Home' />\n      <AllPostTitle title='Typed 기술 블로그' />\n      <Divider />\n\n      <PostFeedWrapper>\n        {posts.map(({ node: { id, frontmatter } }) => {\n          return <PostFeed key={id} frontmatter={frontmatter} />\n        })}\n      </PostFeedWrapper>\n\n      <Pagination\n        isFirstPage={true}\n        isLastPage={false}\n        // allPost의 numPages를 출력해보고 확인하면 됨\n        numPages={3}\n        currentPage={1}\n        isIndexPage={true}\n      />\n    </>\n  )\n}\n\n// TODO: page에 속한 컴포넌트들은 createPage를 통해 context를 전달받지 못하기 때문에 직접 인자를 넣어줘야 함\n// 첫 페이지이므로 skip은 0, limit은 gatsby-node.js에 정의된 postPerPage 만큼\nexport const allPostQuery = graphql`\n  query allPostQuery($skip: Int! = 0, $limit: Int! = 4) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMM DD, YYYY\")\n            excerpt\n            author\n            featuredImage {\n              childImageSharp {\n                fixed(width: 500) {\n                  ...GatsbyImageSharpFixed\n                }\n                fluid(maxWidth: 320) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["props","data","posts","allMdx","edges","title","map","node","id","frontmatter","key","isFirstPage","isLastPage","numPages","currentPage","isIndexPage"],"sourceRoot":""}